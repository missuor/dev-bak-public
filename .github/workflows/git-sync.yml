# .github/workflows/git-sync.yml

name: Git Sync

on:
  push:
    branches: ["public/*"]
  pull_request:
    branches: ["master"]

  schedule:
    # https://crontab.guru/every-2-hours
    # 周一到周五每30分钟一次
    # - cron: "*/30 * * * 1-5"
    # 周六周日每8小时一次
    # - cron: "0 */8 * * 0,6"
    - cron: "*/30 7-19 * * 1-5"
    - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  git-sync:
    runs-on: ubuntu-latest
    steps:
      - name: detact
        run: |
          which git || echo "no git"
          which ssh || echo "no ssh"

      # - name: git-sync
      #   uses: wei/git-sync@v3
      #   with:
      #     source_repo: "missuor/dev-public"
      #     source_branch: "public/images"
      #     destination_repo: "missuor/dev"
      #     destination_branch: "public/images"
      #     ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: git-sync
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          SOURCE_REPO: ${{ vars.SOURCE_REPO }}
          SOURCE_BRANCH: ${{ vars.SOURCE_BRANCH }}
          DESTINATION_REPO: ${{ vars.DESTINATION_REPO }}
          DESTINATION_BRANCH: ${{ vars.DESTINATION_BRANCH }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          which git || echo "no git"
          which ssh || echo "no ssh"


          set -e

          SOURCE_REPO=${SOURCE_REPO:=${GITHUB_REPOSITORY}}
          SOURCE_BRANCH=${SOURCE_BRANCH:=${GITHUB_REF_NAME}}
          DESTINATION_REPO=${DESTINATION_REPO:=${GITHUB_REPOSITORY/-public/}}
          DESTINATION_BRANCH=${DESTINATION_BRANCH:=${GITHUB_REF_NAME}}

          if ! echo $SOURCE_REPO | grep -Eq ':|@|\.git\/?$'; then
          if [[ -n "$SSH_PRIVATE_KEY" || -n "$SOURCE_SSH_PRIVATE_KEY" ]]; then
              SOURCE_REPO="git@github.com:${SOURCE_REPO}.git"
              GIT_SSH_COMMAND="ssh -v"
          else
              SOURCE_REPO="https://github.com/${SOURCE_REPO}.git"
          fi
          fi

          if ! echo $DESTINATION_REPO | grep -Eq ':|@|\.git\/?$'; then
          if [[ -n "$SSH_PRIVATE_KEY" || -n "$DESTINATION_SSH_PRIVATE_KEY" ]]; then
              DESTINATION_REPO="git@github.com:${DESTINATION_REPO}.git"
              GIT_SSH_COMMAND="ssh -v"
          else
              DESTINATION_REPO="https://github.com/${DESTINATION_REPO}.git"
          fi
          fi

          echo "SOURCE=$SOURCE_REPO:$SOURCE_BRANCH"
          echo "DESTINATION=$DESTINATION_REPO:$DESTINATION_BRANCH"

          if [[ -n "$SOURCE_SSH_PRIVATE_KEY" ]]; then
          # Clone using source ssh key if provided
          git clone -c core.sshCommand="/usr/bin/ssh -i ~/.ssh/src_rsa" "$SOURCE_REPO" /root/source --origin source && cd /root/source
          else
          git clone "$SOURCE_REPO" /root/source --origin source && cd /root/source
          fi

          git remote add destination "$DESTINATION_REPO"

          # Pull all branches references down locally so subsequent commands can see them
          git fetch source '+refs/heads/*:refs/heads/*' --update-head-ok

          # Print out all branches
          git --no-pager branch -a -vv

          if [[ -n "$DESTINATION_SSH_PRIVATE_KEY" ]]; then
          # Push using destination ssh key if provided
          git config --local core.sshCommand "/usr/bin/ssh -i ~/.ssh/dst_rsa"
          fi

          git push destination "${SOURCE_BRANCH}:${DESTINATION_BRANCH}" -f
